# 全局配置
port: 7891
socks-port: 7893
redir-port: 7892
mixed-port: 7890
tproxy-port: 7894
ipv6: true
allow-lan: true
unified-delay: true
tcp-concurrent: true
  
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 48
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"
  
# 控制面板
external-controller: 0.0.0.0:9020
secret: ""
external-ui: ui
external-ui-url: "https://ghp.ci/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# 匹配进程 always/strict/off
find-process-mode: strict
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 30

# 策略组选择和fakeip缓存
profile:
  store-selected: true
  store-fake-ip: true
  
# 流量嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    
# 代理模式
tun:
  enable: true
  stack: mixed
  mtu: 9000
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  
# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  respect-rules: true
  # 模式切换 redir-host / fake-ip
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  # 模式切换 whitelist/blacklist 
  # 黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.lan"
    - "+.local"
    - geosite:private
    - geosite:cn
    - rule-set:fcm_domain
  default-nameserver:
    - 8.8.8.8
    - https://1.1.1.1/dns-query
  proxy-server-nameserver:
    - 119.29.29.29
    - 223.5.5.5
  nameserver:
    - https://dns.google/dns-query
    - https://dns.cloudflare.com/dns-query
  nameserver-policy:
    "rule-set:private_domain,cn_domain,pt_domain,fcm_domain":
    - https://doh.pub/dns-query
    - https://223.5.5.5/resolve
    "rule-set:geolocation-!cn":
    - https://dns.google/dns-query
    - https://dns.cloudflare.com/dns-query
 
   
proxies:
- name: "🟢 直连"
  type: direct
  udp: true
 
# 锚点
pr: &pr {type: select, proxies: [🚀 节点选择]}
# 策略组
proxy-groups:
  - {name: 🚀 节点选择, type: select, proxies: []}
  - {name: 🐟 漏网之鱼,!!merge <<: *pr}
rules:
  - RULE-SET,private_domain,🟢 直连
  - RULE-SET,Proxy-A_domain,🚀 节点选择
  - RULE-SET,pt_domain,🟢 直连
  - RULE-SET,fcm_domain,🟢 直连
  - RULE-SET,apple_domain,🟢 直连
  - RULE-SET,proxylite,🚀 节点选择
  - RULE-SET,ai,🚀 节点选择
  - RULE-SET,google_domain,🚀 节点选择
  - RULE-SET,github_domain,🚀 节点选择
  - RULE-SET,youtube_domain,🚀 节点选择
  - RULE-SET,onedrive_domain,🟢 直连
  - RULE-SET,microsoft_domain,🟢 直连
  - RULE-SET,tiktok_domain,🚀 节点选择
  - RULE-SET,speedtest_domain,🚀 节点选择
  - RULE-SET,telegram_domain,🚀 节点选择
  - RULE-SET,netflix_domain,🚀 节点选择
  - RULE-SET,paypal_domain,🚀 节点选择
  - RULE-SET,geolocation-!cn,🚀 节点选择
  - RULE-SET,cn_domain,🟢 直连
  - RULE-SET,google_ip,🚀 节点选择,no-resolve
  - RULE-SET,netflix_ip,🚀 节点选择,no-resolve
  - RULE-SET,telegram_ip,🚀 节点选择,no-resolve
  - RULE-SET,adblock,REJECT  
  - RULE-SET,cn_ip,🟢 直连
  - RULE-SET,giff,🚀 节点选择
  - RULE-SET,proxy_ziyong,🚀 节点选择
  - MATCH,🐟 漏网之鱼
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  qcy: &qcy {type: http, interval: 86400, behavior: domain, format: text}
  list: &list {type: http, interval: 86400, behavior: domain, format: text}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  adblock: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/REIJI007/AdBlock_Rule_For_Clash/main/adblock_reject.mrs"}
  private_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  proxylite: {!!merge <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/ProxyLite.list"}
  Proxy-A_domain: {!!merge <<: *list, url: "https://raw.githubusercontent.com/Hostage-02/sing-box-geosite/refs/heads/main/Proxy-A.list"}
  pt_domain: {!!merge <<: *domain, url: "https://github.com/Hostage-02/sing-box-srs/raw/refs/heads/main/clash/geosite/pt.mrs"}
  fcm_domain: {!!merge <<: *domain, url: "https://github.com/Hostage-02/sing-box-srs/raw/refs/heads/main/clash/geosite/fcm-site.mrs"}
  ai: {!!merge <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/AI.list"}
  github_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  youtube_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  telegram_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  google_domain: {!!merge <<: *list, url: "https://raw.githubusercontent.com/Hostage-02/sing-box-geosite/refs/heads/main/google.list"}
  onedrive_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  tiktok_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  giff: {!!merge <<: *class, url: "https://raw.githubusercontent.com/Hostage-02/sing-box-srs/refs/heads/main/clash/yaml/giff.yaml"}
  proxy_ziyong: {!!merge <<: *class, url: "https://raw.githubusercontent.com/Hostage-02/sing-box-srs/refs/heads/main/clash/yaml/Proxy.yaml"}
  
  cn_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
